API를 호출하는데 걸리는 주요 시간은 요청시간, 서버 처리시간 두개로 나눌수있음

1) 요청시간: 서버에 처리할 mp4파일 전송과 함께 요청을 날리는데 걸리는 시간

- mp4파일의 크기에 비례해서 요청시간이 제곱크기에 가깝게 길어짐
- 서버가 있는 지역의 실시간 인터넷 트래픽 상황에 영향을 받음 (현재는 eu-north 지역 사용중)

ㆍ 현재 소요시간 : 트래픽 상황에 따라 매우 들쭉날쭉하기 때문에 정확하게 평균을 내기가 어려움, 빠를때에는 30초 영상의 경우에도 5초가 채 걸리지 않는 반면 느릴때에는 요청 전송에만 1.5분이걸림

해결방법)

1. 서버 지역을 변경 -> 트래픽 사용량이 적은곳, 주 사용층과 가까운 곳 -> 서울, 오사카 (서버 유지 비용 발생할 수 있음)
2. 밑에서 보겠지만 영상 처리시간은 프레임의 수와 비례하기 때문에 서버 처리시간을 줄이기 위해 절반의 프레임만을 처리중임
요청시간은 파일의 크기에 비례하기때문에 애초에 전송할때 파일의 프레임을 절반으로 줄여서 보낼 수 있다면 요청시간과 처리시간을 동시에 잡을 수 있지 않을까? 
-> 그러나 기술 구현을 추가로 해야하고 해당 기술이 앱내에서 사용될수도 있기 때문에 시간내에 하기 힘들 것 같다. 특히나 기술 구현을 위해 구현 방법을 또 찾아봐야하기때문에 거기서 걸리는 시간이 클 거 같음. 만약 앱내에 넣어야
하는 기능이라면 형우와의 추가적인 소통도 필요하고.

일단은 추가 비용 발생하지 않는 선에서 더 빠른 서버 지역을 찾아서 변경하는 방안이 가장 시간 효율적인 해결방안이라 생각함

2) 서버 처리시간: 전달받은 mp4파일을 서버내에서 처리해서 결과를 내주는데 까지 걸리는 시간

- mp4파일을 처음부터 끝까지 읽어서 결과값을 내는 방식이기 때문에 mp4파일의 크기에 비례해서 걸리는 시간이 증가함
- 내부로직의 구현 방식에 따라 걸리는 시간이 줄어들 수 있음 (ex. 전체 프레임을 전부 읽는 것이 아닌 프레임의 1/n만 읽어서 결과를 도출, 멀티 스레드 방식을 사용해 병렬적으로 영상 처리, 효율적인 알고리즘 사용 등등,.,)
- 서버 컴퓨터의 시스템 사양에 영향을 받음. 당장 내 pc와 비교해봐도 6배정도의 시간차이가 남

ㆍ 현재 소요시간: 현재는 프레임의 절반만 읽어서 처리하고 있음. 10초짜리 영상의 경우 대략 30초 20초 짜리 경우 1분 안팎, 30 초짜리 경우 1.3~1.4분 안팎. 선형적으로 증가함

해결방법) 
1. 서버 컴퓨터의 사양을 높임 (역시 추가비용 발생할 수 있음)
2. python 스크립트의 내부 로직 최적화.
현재 생각 하고 있는 방안으로는 결과값에 영향을 미치지 않을 정도로 프레임을 줄여서 처리, 멀티스레드 활용.  

가장 해야할 것은 코드의 최적화를 통해 우리의 손에서 해결 할 수 있을때까지 처리시간을 줄이고 그 다음 서버 컴퓨터 시스템 사양을 변경해야 될듯
서버 지역 변경의 경우 사용량 (호출량)에 비례해 비용이 발생하기 때문에 개발 테스트만 하는 지금의 단계에선 추가 비용이 발생하지 않을 확률이 높다고 생각되는데
시스템 사양의 경우엔 동적으로 비용이 발생하지 않기때문에 마지막에 변경하는게 맞을 거같긴함 물론 나도 자세한 비용은 잘 모르는데 이거는 좀 찾아봐야할듯

정리)

사실 요청시간 보다는 서버 처리시간을 먼저 줄이는 방안으로 남은 시간을 써야할 것 같다. 왜냐면 요청 시간은 지역 트래픽 사용량에 따라 너무 차이가 큰 반면 서버 처리시간은 최적화 여부에 따라 예상가능한 시간이 걸리므로.
서버 처리시간을 우리가 수용할 수 있는 만큼 먼저 줄여놓고 (1분 영상 처리시간을 30초가 걸리지 않을 정도로) 그 다음에 서버 요청시간을 서버 지역변경을 통해 줄여야 할듯
